/* removes these default browser-enforced styles. */
* {
    margin: 0;
    padding: 0;
    /* ignore padding in the overall width */
    box-sizing: border-box;
}

body {
    /* more on this crazy alphanumerical value in a minute! */
    color: #39a6b2;
    font-family: Helvetica, Arial, sans-serif;
    padding: 20px 35px;
  }

header {
    /* comment */
    font-family: Helvetica, Arial, Helvetica, sans-serif;

     /* Applies 20px to the top and bottom, then 35px to the left and right */
    padding: 20px 35px;
    background-color: #39a6b2;
    /* Makes the <header> a row by default, so there's no need to explicitly declare it.
    And as you can see, flexbox evenly distributed the space of the parent element
    (<header>) among the children elements (the <h1> and <nav> links).
    What makes this more interesting is that both of those children are block-level 
    elements by default,
    and adding flexbox overrides that default behavior. */
    display: flex;
    /* Distributes all empty space evenly between child elements so they are evenly spaced apart. */
    justify-content: space-between;
    /* default value is set to none */
    flex-wrap: wrap;
}

header h1 {
    font-weight: bold;
    font-size: 36px;
    color: #fce138;
    margin: 0;
}

header a {
    /* By default, the value is none, so we don't usually have to explicitly tell it not to do this. 
    With <a> elements, however, the browser automatically applies a blue color and an underline, 
    and we don't want the links to look like that. */
    text-decoration: none;

    color: #fce138;
}

header nav {
    margin: 7px 0;
}

header nav ul {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;

  /* The property align-items works like justify-content,but on the opposite axis. 
  To "justify" information means to position it on the main axis, 
  but to "align" it means to position it along the cross axis. 
  In this case, we're vertically centering our content in the <nav> element. 
  This might sound like a simple task, 
  but it was only when this property was invented
  that it became possible to achieve this type of vertical alignment without using JavaScript. */
  align-items: center;

  /* sets how a list item is styled (bullet points, dashes, etc.) 
  and positioned (indented or outdented).*/
  list-style: none;
}

header nav ul li a {
    margin: 0 30px;
    font-weight: lighter;
    /* vw == viewport width (actual browser window size). 
    This means that if the browser grows or shrinks, 
    that size will change relative to the overall window width. */
    font-size: 1.55vw 
  }

footer {
    width: 100%;
    padding: 40px 35px;
    background: #fce138;
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
}

footer h2 {
    color: #024e76;
    font-size: 30px;
    margin: 0;
}

footer div {
    line-height: 1.5;
    text-align: right;
}

footer a {
    color: #024e76;
}

section {
    padding: 60px;
  }

/* Hero Style Start */
.hero {
    background-image: url("../images/hero-bg.jpg");
    background-size: cover;
    background-position: center;
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
}
/* Hero Style End */
.hero-form {
    /* shorthand property which includes all 3 values on one line */
    border: solid 3px #024e76;
    background-color: #fce138;
    padding: 20px;
    color: #024e76;
    border-color: #024e76;
    width: 40%;
    margin: 3.5%;
}

.hero-form h3 {
    font-size: 24px;
    /* reduces possible word wrapping */
    margin: 0;
}

/* add some space to the <p> element to make it more pleasant to read, 
specifically on the top and bottom margins */
.hero-form p {
    margin: 5px 0 15px 0
}

/* call to action */
.hero-cta {
  width: 35%;
  text-align: right;
  margin: 3.5%;
  color: #fff;
  font-size: 18px;
  line-height: 1.3;
}

.hero-cta h2 {
  font-style: italic;
  font-size: 55px;
  color: #fce138;
}

.form-input {
    /* set to a narrow 1px border to emphasize the sign-up requests. */
    border: 1px solid #024e76;
    /* instructs the browser to render the element either as a <block> or inline. */
    display: block;
    padding: 7px 15px;
    font-size: 16px;
    color: #024e76;
    width: 100%;
    margin-bottom: 15px;
}

.hero-form label {
    margin: 0 5px;
  }

  .hero-form button {
    color: yellow;
    background-color: #024e76;
    border: none;
    padding: 10px 20px;
    font-size: 16px;
  }

  .intro p {
    line-height: 1.7;
    color: #39a6b2;
    width: 80%;
    font-size: 20px;
    /* works for horizontal centering, but does not vertically center elements. */
    margin: 0 auto;
    text-align: center; 
  }

  .steps { 
    background: #fce138;
  }

  .step {
    margin: 50px auto;
    padding-bottom: 50px;
    width: 80%;
    border-bottom: 1px solid #39a6b2;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-between;
  }

  .section-title {
    font-size: 55px;
    border-bottom: 3px solid;
    color: #024e76;
    padding-bottom: 20px;
    text-align: center;
    margin: 0 auto 35px auto;
    width: 50%;
  }
  
  .primary-border {
    border-color: #fce138;
  }
  
  .secondary-border {
    border-color: #39a6b2;
  }
  
  .step h3 {
    color: #024e76;
    font-size: 46px;
    flex: 1 30%;
  }
  .step-info {
    flex: 2 70%;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
  }

  .step-text {
    flex: 12;
  }

  .step-img img {
    /* limits width to be whatever its container is. */
    max-width: 100%;
  }
  
  .step-text p{
    color: #39a6b2;
    font-size: 18px;
  }

  .step-text h4 {
    font-size: 26px;
    line-height: 1.5;
    color: #024e76;
  }

  .step-img {
    flex: 1 12%;
    margin-right: 20px;
  }

  .trainers {
    width: 100%;
    margin: 0 auto;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
  }

  .trainer {
    margin: 20px;
    background: #024e76;
    color: #fce138;
    /* If all flexbox children have a value of flex: 1, 
    that means they'll share any extra space evenly. */
    flex: 1;
  }

  .trainer img {
    width: 100%;
  }
  
  .trainer-bio {
    padding: 25px;
    line-height: 1.3;
  }

  .text-left {
    text-align: left;
  }
  
  .text-right {
    text-align: right;
  }

  .flex-row {
    /* The default flex-direction value for a flexbox is row,
     so we do not need to explicitly declare it. */
    display: flex;
  }
  
  .trainer-bio h3 {
    font-size: 28px;
  }
  
  .trainer-bio h4 {
    font-weight: lighter;
    font-size: 22px;
    margin-bottom: 15px;
  }
  
  .trainer-bio p {
    font-size: 17px;
  }

  /* REACH OUT STYLES START */
.contact {
    background: #024e76;
  }

.contact h2 {
    color: #fce138;
  }

.contact-info {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}

.contact-info > * {
  flex: 1;
  margin: 15px;
}

.contact-info iframe {
    height: 400px;
}

.contact-info div {
    color: white;
  }

  .contact-info h3 {
    color: #fce138;
    font-size: 32px;
  }
  
  .contact-info p, .contact-info address {
    margin: 20px 0;
    line-height: 1.5;
    font-size: 16px;
    font-style: normal;
  }

  .contact-form input, .contact-form textarea {
    border: 1px solid #024e76;
    display: block;
    padding: 7px 15px;
    font-size: 16px;
    color: #024e76;
    width: 100%;
    margin-bottom: 15px;
    margin-top: 5px;
  }

  .contact-form button {
    width: 100%;
    border: none;
    background: #fce138;
    color: #024e76;
    text-align: center;
    padding: 15px 0;
    font-size: 16px;
  }
  
  .contact-info a {
    color: #fce138;
  }
  /* REACH OUT STYLES END */